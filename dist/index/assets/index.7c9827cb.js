var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,a=Object.getOwnPropertySymbols,l=Object.prototype.propertyIsEnumerable,o=(t,a,l)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:l}):t[a]=l,n=(e,n)=>{for(var s in n||(n={}))t.call(n,s)&&o(e,s,n[s]);if(a)for(var s of a(n))l.call(n,s)&&o(e,s,n[s]);return e};import{r as s,t as i,o as r,c as d,a as c,w as p,v,b as u,F as b,d as m,e as g,f as x}from"./index.cc38330a.js";import{a as f}from"./api.052133b1.js";const y={setup(){const e=s({input:null,tables:null,showtips:!0});return n(n({},i(e)),{generated:()=>{if(""==e.input||null==e.input)return console.log("Empty Expression"),void alert("Empty Expression");f.checkValid({expression:e.input}).then((t=>{if(console.log(t),!t)return console.log("Invalid Expression"),void alert("Invalid Expression");f.truthtable({expression:e.input}).then((t=>{console.log(t),e.tables=t,e.showtips=!1})).catch((e=>{console.log(e)}))})).catch((e=>{console.log("Server Error"),console.log(e)}))}})}},_={class:"Index navbar-light customNav navbar navbar-expand-lg"},h={class:"container-sm"},w=c("div",null,[c("div",{id:"title"},"Truth Table Generator")],-1),j={class:"form-group row"},k={id:"legend",class:"container"},E={key:0,class:"legend__content card",style:{"max-width":"700px"}},O=g('<div id="operands" class="flex-row space-between"><div class="operand flex-column text-center"><div class="operand__original">Conjunction</div><div class="operand__code">/\\ | and</div></div><div class="operand flex-column text-center"><div class="operand__original">Disjunction</div><div class="operand__code">\\/ | or</div></div><div class="operand flex-column text-center"><div class="operand__original">Not</div><div class="operand__code">~/!/not</div></div><div class="operand flex-column text-center"><div class="operand__original">Xor</div><div class="operand__code">xor/âŠ•</div></div><div class="operand flex-column text-center"><div class="operand__original">Implication</div><div class="operand__code"> -&gt;</div></div><div class="operand flex-column text-center"><div class="operand__original">Bi-implication</div><div class="operand__code">&lt;-&gt;</div></div></div><hr><h3 style="margin-left:auto;margin-right:auto;"> How to type </h3><div id="details"><p>Use the above characters for the logical operators. Identifiers can be either upper or lower case letters: A, B, x, y... You can also type <b>true</b> and <b>false</b>.</p><p class="example"> Example: A -&gt; (B /\\ C) </p></div>',4),I={class:"row tb table-responsive"},C={key:0,class:"table col-sm-11 col-md-9 table-striped "},S={align:"center"},A={id:"tbody"},B=c("div",null,null,-1);y.render=function(e,t,a,l,o,n){return r(),d("div",_,[c("div",h,[w,c("div",j,[p(c("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=t=>e.input=t),class:"form-control col-sm-8 col-md-6",placeholder:"Type your formula..."},null,512),[[v,e.input]]),c("button",{type:"button",onClick:t[2]||(t[2]=e=>l.generated()),class:"btn btn-default col-sm-1 col-md-2"},"Generate")]),c("div",k,[1==e.showtips?(r(),d("div",E,[O])):u("",!0)]),c("div",I,[e.tables?(r(),d("table",C,[c("thead",null,[c("tr",S,[(r(!0),d(b,null,m(e.tables,((e,t,a)=>(r(),d("th",{scope:"col text-center",key:a.id},x(t),1)))),128))])]),c("tbody",A,[(r(!0),d(b,null,m(Object.keys(e.tables[Object.keys(e.tables)[0]]),((t,a)=>(r(),d("tr",{key:a.id},[(r(!0),d(b,null,m(e.tables,((e,t,l)=>(r(),d("td",{key:l.id,align:"center"},x(e[a+1].toString().charAt(0).toUpperCase()+e[a+1].toString().slice(1)),1)))),128))])))),128)),B])])):u("",!0)])])])};export default y;
